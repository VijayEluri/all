h1. Display current charset

<pre>
select value from nls_database_parameters where parameter = 'NLS_CHARACTERSET';
select value from nls_database_parameters where parameter = 'NLS_NCHAR_CHARACTERSET';
</pre>

h1. Disable flashback

<pre>
exec dbms_flashback.disable;
alter database flashback off;
</pre>

h1. Change parameter

<pre>
show parameter <parameter>
alter system set <parameter>=<value> scope=spfile
</pre>

h1. Trace sql

<pre>
show parameter user_dump_dest;
exec dbms_monitor.database_trace_enable(binds=>TRUE);
exec dbms_monitor.database_trace_disable;
</pre>

Trace Analyzer from metalink: 

https://metalink.oracle.com/metalink/plsql/ml2_documents.showDocument?p_database_id=NOT&p_id=224270.1

Generate raw sql:

<pre>tkprof dctm_ora_4103.trc dctm_ora_4103.rpt record=dctm_ora_4103.sql</pre>

h1. Trun off logging

<pre>
alter system set "_disable_logging"=True scope=spfile;
alter system set "_disable_logging"=False scope=spfile;
</pre>

h1. Show user tablespaces


<pre>
col file_name format a50
col tablespace_name format a10
SELECT file_name, tablespace_name, ROUND(bytes/1024000) MB FROM dba_data_files ORDER BY file_name;

set linesize 120
SELECT tablespace_name, ROUND(SUM(total_mb)-SUM(free_mb)) CUR_USE_MB, 
       ROUND(SUM(total_mb)) CUR_SZ_MB, 
       ROUND((SUM(total_mb)-SUM(free_mb))/SUM(total_mb)*100) CUR_PCT_FULL, 
       ROUND(SUM(max_mb) * (SUM(total_mb)-SUM(free_mb))) FREE_SPACE_MB,
       ROUND(SUM(max_mb)) MAX_SZ_MB, 
       ROUND((SUM(total_mb)-SUM(free_mb))/SUM(max_mb)*100) PCT_FULL
FROM (
  SELECT tablespace_name, SUM(bytes)/1024/1024 FREE_MB,
  0 TOTAL_MB, 0 MAX_MB
  FROM dba_free_space
  GROUP BY tablespace_name
  UNION
  SELECT tablespace_name, 0 CURRENT_MB,
  SUM(bytes)/1024/1024 TOTAL_MB,
  SUM(DECODE(maxbytes,0,bytes, maxbytes))/1024/1024 MAX_MB
  FROM dba_data_files
  GROUP BY tablespace_name)
GROUP BY tablespace_name;
</pre>

h1. Add datafile into tablespace

<pre>
ALTER TABLESPACE ADD DATAFILE <file_name>,
<integer><K | M | G | T>
[REUSE]
<autoextend> <ON | OFF>
NEXT <integer><K | M | G | T>
MAXSIZE <integer><K | M | G | T | UNLIMITED>

alter tablespace example add datafile '/oradata/example07.dbf' size 250m autoextend off;
</pre>

h1. show table space usage

<pre>
break on report
compute sum of tbs_size_mb on report
compute sum of used        on report
compute sum of avail       on report

column tsname       format a20         heading 'Tablespace Name'
column tbs_size_mb  format 999,999     heading 'Size|(MB)'
column used         format 999,999     heading 'Used|(MB)'
column avail        format 999,999     heading 'Free|(MB)'
column used_visual  format a11         heading 'Used'
column pct_used     format 999         heading '% Used'

set linesize  1000
set trimspool on
set pagesize  32000
set verify    off
set feedback  off

PROMPT
PROMPT *************************
PROMPT *** TABLESPACE STATUS ***
PROMPT *************************

SELECT   df.tablespace_name                           tsname
,        sum(df.bytes)/1024/1024                      tbs_size_mb
,        nvl(sum(e.used_bytes)/1024/1024,0)           used
,        nvl(sum(f.free_bytes)/1024/1024,0)           avail
,        rpad(' '||rpad('X',round(sum(e.used_bytes)
*10/sum(df.bytes),0), 'X'),11,'-')           used_visual
,        nvl((sum(e.used_bytes)*100)/sum(df.bytes),0) pct_used
FROM     sys.dba_data_files df
,        (SELECT   file_id
,        sum(nvl(bytes,0)) used_bytes
FROM     sys.dba_extents
GROUP BY file_id) e
,        (SELECT   max(bytes) free_bytes
,        file_id
FROM     dba_free_space
GROUP BY file_id) f
WHERE    e.file_id(+) = df.file_id
AND      df.file_id   = f.file_id(+)
GROUP BY df.tablespace_name
ORDER BY 6
/

clear breaks
</pre>
