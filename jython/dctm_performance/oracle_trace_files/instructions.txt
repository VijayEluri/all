Note:224270.1 Trace Analyzer TRCANLZR 11.0.2 March 20, 2008 by Carlos Sierra

Interpreting Raw SQL Traces with Binds and/or Waits generated by EVENT 10046
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Reads a raw SQL Trace generated by standard SQL Trace or by EVENT 10046 levels
1, 4, 8 or 12, and it generates a comprehensive HTML report with performance
related details: time summary, call summary (parse, execute, fetch),
identification of top SQL, row source plan, explain plan, CBO statistics,
wait events, values of bind variables, I/O summary per schema object, latches,
hot blocks, etc.

Output HTML report includes all the details found on TKPROF, plus additional
information normally requested and used for a transaction performance analysis.

Generated report is more readable and extensive than text format used on prior
version of this tool and on current TKPROF.

Installing the Trace Analyzer:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Installation scripts create a user called TRCANLZR, which will own all
    PL/SQL code and database objects created (including the TRCA$ tables,
    indexes, sequences, views and the TRCA$I and TRCA$D packages).

    During the installation you will be prompted for the TRCANLZR
    user's password, as well as default and temporary tablespaces.

    The default tablespace will be used to create some Trace Analyzer
    objects (such as tables and indexes).  The temporary tablespace
    will be used for most objects and sort-type activities.

    You will be asked also for the host string to be used (if any). This
    string corresponds to the TNS alias. If you connect to that instance
    using a commad like "connect bug/bug@cerbdev", the host string would be:
    @cerbdev

      NOTE:
      o  Install only on RDBMS 9i (9.2), 10g, or 11g. If you need to install
         on 8i, then use TRCA_OLD.ZIP and follow instructions included in that
         file.

      o  A password for TRCANLZR user is mandatory and there is no default
         password; if a password is not specified, the installation will
         abort with an error indicating this is the problem.

      o  Do not specify the SYSTEM tablespace for the TRCANLZR users
         DEFAULT or TEMPORARY tablespaces; if SYSTEM is specified the
         installation will abort with an error indicating this is the
         problem.  This is enforced as Oracle do not recommend using
         the SYSTEM tablespace to store statistics data, nor for workareas.
         Use a TOOLS tablespace to store the data, and your instance's
         TEMPORARY tablespace for workarea overflows.

    To install the tool, uncompress trca.zip file into a dedicated directory
    in the server, and run SQL*Plus from that directory connecting as a user
    with SYSDBA privilege.

    e.g.  Start SQL*Plus, connect as SYSDBA and execute script:

        # cd trca/install
        # sqlplus /nolog
        SQL> connect / as sysdba
        SQL> @tacreate.sql

    The tacreate.sql install script runs 3 other scripts - you do not need to
    run these scripts manually. They are called automatically:

      1.  tacusr.sql  ->  creates user TRCANLZR and grants privileges
      2.  tactab.sql  ->  creates TRCA$ tables, indexes and views
      3.  tacpkg.sql  ->  creates packages TRCA$D and TRCA$I

    Check each of the three output files produced by the installation
    (tacusr.lis, tactab.lis, tacpkg.lis). Ensure no errors were encountered.

    Note that tacreate.sql and tacusr.sql are executed as a user with SYSDBA
    priviledge. Script tacreate.sql, after executing tacusr.sql, connects
    automatically as TRCANLZR and executes scripts: tactab.sql and tacpkg.sql.
    The latter script executes in turn: tacpkgd.pks, tacpkgd.pkb, tacpkgi.pks
    and tacpkgi.pkb.

Errors during installation:
~~~~~~~~~~~~~~~~~~~~~~~~~~
    Review first taconfig.lis. If packages and directories are valid,
    installation is fine. Otherwise review all *.lis files.

    If you need to contact Support regarding concerns during this tool
    installation, be sure to supply all *.lis files generated

Uninstalling the Trace Analyzer:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    To uninstall Trace Analyzer version 10.5 or higher, connect as a user
    with SYSDBA privilege.

    e.g.  Start SQL*Plus, connect as SYSDBA and execute script:

        # cd trca/install
        # sqlplus /nolog
        SQL> connect / as sysdba
        SQL> @tadrop.sql

Using the Trace Analyzer:
~~~~~~~~~~~~~~~~~~~~~~~~
    Use from SQL*Plus connected as the user that originated the SQL Trace
    and on same instance for maximum report details. The Trace Analyzer
    report is generated into local client directory. Input trace file must
    be in INPUT directory (usually UDUMP).

    e.g. Start SQL*Plus, then
        # cd trca/run
        # sqlplus [application user]/[application pwd]
        SQL> @trcanlzr.sql vis_ora_14328_SYSADMIN.trc;

    NOTE:
    o  Trace Analyzer requires a recent snapshot of DBA_EXTENTS into
       trca$_extents. If a new snaphot is required due to significant DML
       activity, then:

        # cd trca/run
        # sqlplus [application user]/[application pwd]
        SQL> exec trca$i.refresh_trca$_extents;

References:
~~~~~~~~~~
Interpreting Raw SQL_TRACE and DBMS_SUPPORT.START_TRACE output
   Note: 39817.1
SQLTXPLAIN.SQL
   Enhanced Explain Plan and diagnostic info for one SQL statement
   Note: 215187.1
Implementing and Using the PL/SQL Profiler
   Note: 243755.1
TraceAnalyzer_IOUG.pdf (included in compressed file)
   White paper
   "Oracle Trace Analysis on Steroids - An in-depth look at the Trace Analyzer"
   written and presented by Dave Moore, DBI
   at the COLLABORATE06 event - IOUG OAUG
   in Nashville, Tennessee, USA,
   during April 23 - 27, 2006

Feedback:
~~~~~~~~
    Contact author by email: carlos.sierra@oracle.com
